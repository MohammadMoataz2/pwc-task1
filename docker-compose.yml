version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: pwc_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - pwc_network

  redis:
    image: redis:7.2-alpine
    container_name: pwc_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - pwc_network

  mongo-express:
    image: mongo-express:1.0-20-alpine3.18
    container_name: pwc_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      - mongodb
    networks:
      - pwc_network

  api:
    build:
      context: .
      dockerfile: ./src/python/projects/api/Dockerfile
    container_name: pwc_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/pwc_contracts?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - STORAGE_TYPE=local
      - LOCAL_STORAGE_PATH=/app/storage
      - AI_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
    volumes:
      - api_storage:/app/storage
    depends_on:
      - mongodb
      - redis
    networks:
      - pwc_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: ./src/python/projects/analyze_contracts/Dockerfile
    container_name: pwc_worker
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/pwc_contracts?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - STORAGE_TYPE=local
      - LOCAL_STORAGE_PATH=/app/storage
      - AI_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - API_BASE_URL=http://api:8000
    volumes:
      - api_storage:/app/storage
    depends_on:
      api:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - pwc_network

volumes:
  mongodb_data:
  redis_data:
  api_storage:

networks:
  pwc_network:
    driver: bridge