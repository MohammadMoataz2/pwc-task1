version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: pwc_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - pwc_network

  redis:
    image: redis:7.2-alpine
    container_name: pwc_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - pwc_network

  # RedisInsight - Redis GUI
  redisinsight:
    image: redis/redisinsight:latest
    container_name: pwc_redisinsight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/data
    depends_on:
      - redis
    networks:
      - pwc_network

  mongo-express:
    image: mongo-express:1.0-20-alpine3.18
    container_name: pwc_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD:-password123}
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL:-mongodb://admin:password123@mongodb:27017/}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD:-admin123}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: ${ME_CONFIG_MONGODB_ENABLE_ADMIN:-true}
    depends_on:
      - mongodb
    networks:
      - pwc_network

  api:
    build:
      context: .
      dockerfile: ./src/python/projects/api/Dockerfile
    container_name: pwc_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=${MONGODB_URL:-mongodb://admin:password123@mongodb:27017/pwc_contracts?authSource=admin}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      - LOCAL_STORAGE_PATH=${LOCAL_STORAGE_PATH:-/app/storage}
      - AI_PROVIDER=${AI_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
    volumes:
      - api_storage:/app/storage
    depends_on:
      - mongodb
      - redis
    networks:
      - pwc_network

  worker:
    build:
      context: .
      dockerfile: ./src/python/projects/analyze_contracts/Dockerfile
    container_name: pwc_worker
    restart: unless-stopped
    environment:
      - MONGODB_URL=${MONGODB_URL:-mongodb://admin:password123@mongodb:27017/pwc_contracts?authSource=admin}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      - LOCAL_STORAGE_PATH=${LOCAL_STORAGE_PATH:-/app/storage}
      - AI_PROVIDER=${AI_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
      - API_BASE_URL=${API_BASE_URL:-http://api:8000}
      - PARSING_PROVIDER=${PARSING_PROVIDER:-library}
      - ANALYSIS_PROVIDER=${ANALYSIS_PROVIDER:-openai}
      - EVALUATION_PROVIDER=${EVALUATION_PROVIDER:-openai}
    volumes:
      - api_storage:/app/storage
    networks:
      - pwc_network

  frontend:
    build:
      context: .
      dockerfile: ./src/python/projects/frontend/Dockerfile
    container_name: pwc_frontend
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=${API_BASE_URL:-http://api:8000}
    depends_on:
      - api
    networks:
      - pwc_network

  flower:
    image: mher/flower:master
    container_name: pwc_flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - FLOWER_PORT=5555
    depends_on:
      - redis
      - worker
    networks:
      - pwc_network
    command: celery flower --broker=${CELERY_BROKER_URL:-redis://redis:6379/0}

volumes:
  mongodb_data:
  redis_data:
  redisinsight_data:  # Add this volume
  api_storage:

networks:
  pwc_network:
    driver: bridge